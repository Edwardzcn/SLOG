syntax = "proto3";

import "transaction.proto";

package slog.internal;

message Configuration {
    // Protocol for the zmq sockets in the broker. Use "tcp" for
    // normal running and "icp" for unit and integration tests
    bytes protocol = 1;
    // List of all machine addresses in the system. 
    // If protocol is "tcp", these are IP addresses.
    // If protocol is "icp", these are filesystem paths.
    repeated bytes addresses = 2;
    // Port for the zmq sockets in the broker. This is ignored if
    // the icp protocol is used
    uint32 broker_port = 3;
    // Number of replicas of the database
    uint32 num_replicas = 4;
    // Number of partitions per replica
    uint32 num_partitions = 5;
}

message SlogIdentifier {
    uint32 replica = 1;
    uint32 partition = 2;
}

message Request {
    uint32 stream_id = 1;
    oneof type {
        EchoRequest echo = 2;
        ReadyRequest ready = 3;
        ForwardRequest forward = 4;
    }
}

// For debugging and testing purposes
message EchoRequest {
    bytes data = 1;
}

message ReadyRequest {
    bytes ip_address = 1;
    SlogIdentifier slog_id = 2;
}

message ForwardRequest {
    Transaction txn = 1;
}

message Response {
    uint32 stream_id = 1;
    oneof type {
        EchoResponse echo = 2;
    }
}

// For debugging and testing purposes
message EchoResponse {
    bytes data = 1;
}
